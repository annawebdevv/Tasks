{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/Tasks/practiceHooks-HOCS/src/hooks/UseCallback/HookUseCallback.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo, useCallback } from \"react\";\nimport { ItemsList } from \"./ItemsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HookUseCallback = () => {\n  _s();\n\n  const [count, setCount] = useState(1);\n  const [color, setColor] = useState(false);\n  const generateItems = useCallback(() => {\n    return new Array(count).fill(\"\").map((_, i) => `Elem ${i + 1}`);\n  });\n\n  const styles = () => {\n    return {\n      color: color ? \"green\" : \"grey\"\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles,\n      children: \"Callback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prev => prev + 1),\n      children: \" +1 Elem \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setColor(!color);\n      },\n      children: \"Change color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemsList, {\n      getItems: generateItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HookUseCallback, \"rxfEdAmm8ii6TH9RgczaLGJWzxM=\");\n\n_c = HookUseCallback;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookUseCallback\");","map":{"version":3,"names":["useState","useMemo","useCallback","ItemsList","HookUseCallback","count","setCount","color","setColor","generateItems","Array","fill","map","_","i","styles","prev"],"sources":["/Users/user/Documents/Новая папка/Tasks/practiceHooks-HOCS/src/hooks/UseCallback/HookUseCallback.jsx"],"sourcesContent":["import { useState,  useMemo, useCallback } from \"react\";\nimport { ItemsList } from \"./ItemsList\";\n\nexport const HookUseCallback = () => {\n  const [count, setCount] = useState(1);\n  const [color, setColor] = useState(false);\n\n  const generateItems =useCallback( () => {\n    return new Array(count).fill(\"\").map((_, i) => `Elem ${i + 1}`);\n  });\n\n  const styles = () => {\n    return { color: color ? \"green\" : \"grey\" };\n  };\n\n  return (\n    <div>\n      <h2 style={styles}>Callback</h2>\n      <button onClick={() => setCount((prev) => prev + 1)}> +1 Elem </button>\n\n      <button\n        onClick={() => {\n          setColor(!color);\n        }}>\n        Change color\n      </button>\n      <ItemsList getItems={generateItems} />\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAoBC,OAApB,EAA6BC,WAA7B,QAAgD,OAAhD;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EAEA,MAAMS,aAAa,GAAEP,WAAW,CAAE,MAAM;IACtC,OAAO,IAAIQ,KAAJ,CAAUL,KAAV,EAAiBM,IAAjB,CAAsB,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAW,QAAOA,CAAC,GAAG,CAAE,EAAtD,CAAP;EACD,CAF+B,CAAhC;;EAIA,MAAMC,MAAM,GAAG,MAAM;IACnB,OAAO;MAAER,KAAK,EAAEA,KAAK,GAAG,OAAH,GAAa;IAA3B,CAAP;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAI,KAAK,EAAEQ,MAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAQ,OAAO,EAAE,MAAMT,QAAQ,CAAEU,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAIE;MACE,OAAO,EAAE,MAAM;QACbR,QAAQ,CAAC,CAACD,KAAF,CAAR;MACD,CAHH;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAUE,QAAC,SAAD;MAAW,QAAQ,EAAEE;IAArB;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CA1BM;;GAAML,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}