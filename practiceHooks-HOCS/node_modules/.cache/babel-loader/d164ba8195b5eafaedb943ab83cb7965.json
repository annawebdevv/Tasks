{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430/Tasks/practiceHooks-HOCS/src/hooks/HookUseCallback.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HookUseCallback = () => {\n  _s();\n\n  const [count, setCount] = useState(50);\n  const [color, setColor] = useState(false);\n  const [items, setItems] = useState();\n\n  const generateItems = index => {\n    return new Array(count).fill('').map((_, i) => `Elem ${i + index}`);\n  };\n\n  setItems;\n  const styles = useMemo(() => {\n    return {\n      color: color ? \"green\" : \"grey\"\n    };\n  }, [color]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Callback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles,\n      children: [\" \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prev => prev + 2),\n      children: \" +2 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setColor(!color);\n      },\n      children: [\" \", \"Change color\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HookUseCallback, \"n8wwalecqw0ZDIY8b93Oqw+eOvE=\");\n\n_c = HookUseCallback;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookUseCallback\");","map":{"version":3,"names":["useState","useEffect","useMemo","useCallback","HookUseCallback","count","setCount","color","setColor","items","setItems","generateItems","index","Array","fill","map","_","i","styles","prev"],"sources":["/Users/user/Documents/Новая папка/Tasks/practiceHooks-HOCS/src/hooks/HookUseCallback.jsx"],"sourcesContent":["import { useState, useEffect, useMemo, useCallback } from \"react\";\n\nexport const HookUseCallback = () => {\n  const [count, setCount] = useState(50);\n  const [color, setColor] = useState(false);\n  const [items, setItems] = useState()\n\n  const generateItems = (index)=>{\n    return new Array(count).fill('').map((_,i)=> `Elem ${i+index}`)\n  }\n  setItems\n  const styles =  useMemo(() =>{\n    return {color: color ? \"green\" : \"grey\"}\n  }, [color]);\n\n  return (\n    <div>\n      <h2>Callback</h2>\n      <p style={styles}> {count}</p>\n      <button onClick={() => setCount((prev) => prev + 2)}> +2 </button>\n\n      <button\n        onClick={() => {\n          setColor(!color);\n        }}>\n        {\" \"}\n        Change color{\" \"}\n      </button>\n\n    </div>\n  );\n}; \n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,EAAuCC,WAAvC,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;;EAEA,MAAMW,aAAa,GAAIC,KAAD,IAAS;IAC7B,OAAO,IAAIC,KAAJ,CAAUR,KAAV,EAAiBS,IAAjB,CAAsB,EAAtB,EAA0BC,GAA1B,CAA8B,CAACC,CAAD,EAAGC,CAAH,KAAS,QAAOA,CAAC,GAACL,KAAM,EAAtD,CAAP;EACD,CAFD;;EAGAF,QAAQ;EACR,MAAMQ,MAAM,GAAIhB,OAAO,CAAC,MAAK;IAC3B,OAAO;MAACK,KAAK,EAAEA,KAAK,GAAG,OAAH,GAAa;IAA1B,CAAP;EACD,CAFsB,EAEpB,CAACA,KAAD,CAFoB,CAAvB;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAG,KAAK,EAAEW,MAAV;MAAA,gBAAoBb,KAApB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAAEa,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAKE;MACE,OAAO,EAAE,MAAM;QACbX,QAAQ,CAAC,CAACD,KAAF,CAAR;MACD,CAHH;MAAA,WAIG,GAJH,kBAKe,GALf;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA7BM;;GAAMH,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}